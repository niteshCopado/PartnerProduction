<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>49.0</apiVersion>
    <assignments>
        <name>Assign_Invoice_Values</name>
        <label>Assign Invoice Values</label>
        <locationX>370</locationX>
        <locationY>336</locationY>
        <assignmentItems>
            <assignToReference>nInvoices</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Invoices</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IsInvoiceNull</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignNotOverDue</name>
        <label>AssignNotOverDue</label>
        <locationX>1116</locationX>
        <locationY>521</locationY>
        <assignmentItems>
            <assignToReference>UpdateAccount.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AccountId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateAccount.Payment_Health__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>On-time</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Payment_Health_Not_Overdue</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignUpdateAccount</name>
        <label>AssignUpdateAccount</label>
        <locationX>1120</locationX>
        <locationY>124</locationY>
        <assignmentItems>
            <assignToReference>UpdateAccount.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AccountId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdateAccount.Payment_Health__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Overdue</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Account_Payment_Health</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Is_Overdue</name>
        <label>Is Overdue</label>
        <locationX>851</locationX>
        <locationY>130</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Overdue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>InvoiceTest.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Overdue</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignUpdateAccount</targetReference>
            </connector>
            <label>Overdue</label>
        </rules>
        <rules>
            <name>NotOverdue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>InvoiceTest.Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Overdue</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignNotOverDue</targetReference>
            </connector>
            <label>NotOverdue</label>
        </rules>
    </decisions>
    <decisions>
        <name>IsInvoiceNull</name>
        <label>IsInvoiceNull</label>
        <locationX>540</locationX>
        <locationY>339</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Null</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>nInvoices</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignNotOverDue</targetReference>
            </connector>
            <label>Null</label>
        </rules>
        <rules>
            <name>Not_Null</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>nInvoices</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_Over_Invoices</targetReference>
            </connector>
            <label>Not Null</label>
        </rules>
    </decisions>
    <description>Check Invoices for Overdue status</description>
    <interviewLabel>Invoice Status {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Invoice Status</label>
    <loops>
        <name>Loop_Over_Invoices</name>
        <label>Loop Over Invoices</label>
        <locationX>544</locationX>
        <locationY>124</locationY>
        <assignNextValueToReference>InvoiceTest</assignNextValueToReference>
        <collectionReference>Invoices</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Is_Overdue</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Overdue_Invoices</name>
        <label>Overdue Invoices</label>
        <locationX>202</locationX>
        <locationY>338</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Invoice_Values</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>AccountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Overdue</stringValue>
            </value>
        </filters>
        <object>Invoice__c</object>
        <outputReference>Invoices</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Status__c</queriedFields>
    </recordLookups>
    <recordUpdates>
        <name>Update_Account_Payment_Health</name>
        <label>Update Account Payment Health</label>
        <locationX>1351</locationX>
        <locationY>125</locationY>
        <inputReference>UpdateAccount</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Payment_Health_Not_Overdue</name>
        <label>Update Payment Health Not Overdue</label>
        <locationX>1351</locationX>
        <locationY>522</locationY>
        <inputReference>UpdateAccount</inputReference>
    </recordUpdates>
    <startElementReference>Overdue_Invoices</startElementReference>
    <status>Active</status>
    <variables>
        <name>AccountId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Invoice</name>
        <dataType>Picklist</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>InvoiceCheck</name>
        <dataType>Picklist</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>Invoices</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <objectType>Invoice__c</objectType>
    </variables>
    <variables>
        <name>InvoiceTest</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Invoice__c</objectType>
    </variables>
    <variables>
        <name>nInvoices</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <scale>2</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>Test</name>
        <dataType>Picklist</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>UpdateAccount</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Account</objectType>
    </variables>
</Flow>
